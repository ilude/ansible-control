// For format details, see https://aka.ms/vscode-remote/devcontainer.json or this file's README at:
// https://github.com/microsoft/vscode-dev-containers/tree/v0.134.1/containers/alpine
{
	"name": "Alpine",
	"build": {
		"dockerfile": "Dockerfile",
		// Update 'VARIANT' to pick an Alpine version: 3.10, 3.11, 3.12
		"args": { "VARIANT": "3.12" }
	},
	"workspaceMount": "source=ansible-control,target=/app,type=volume",
	"workspaceFolder": "/app",

	"mounts": [
		"source=${localWorkspaceFolder}/.devcontainer,target=/app/.devcontainer,type=bind,consistency=cached",
		"source=${localEnv:USERPROFILE}/.ssh,target=/root/.host/.ssh,type=bind,consistency=cached",
	],

	"containerEnv": {
		"PROJECT_PATH":"ansible",
		"GIT_REPO": "git@github.com:ilude/ansible-control.git"
	},

	// Set *default* container specific settings.json values on container create. 
	"settings": {
		"terminal.integrated.shell.linux": "/bin/bash"
	},

	// Add the IDs of extensions you want installed when the container is created.
	// Note that some extensions may not work in Alpine Linux. See https://aka.ms/vscode-remote/linux.
	"extensions": [],

	// Use 'forwardPorts' to make a list of ports inside the container available locally.
	// "forwardPorts": [],

	// Use 'postCreateCommand' to run commands after the container is created.
	"postCreateCommand": "/usr/local/bin/docker-entrypoint.sh",

	// Uncomment when using a ptrace-based debugger like C++, Go, and Rust
	//"runArgs": [ "--hostname ansible-control" ]

	// Uncomment to connect as a non-root user. See https://aka.ms/vscode-remote/containers/non-root.
	// "remoteUser": "vscode"
}